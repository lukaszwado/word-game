"use strict";angular.module("avriosApp",["ngRoute"]).constant("DEFAULT_LEVEL",5).constant("GAME_TIME",4e4).constant("API_PATH","//api.wordnik.com/v4/words.json/randomWords?hasDictionaryDef=true&excludePartOfSpeech=family-name,given-name&minCorpusCount=100000&maxCorpusCount=-1&minDictionaryCount=2&maxDictionaryCount=-1&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5"),function(){function e(e){const t={};return t.level=e,{get:function(e){return e?t[e]:t},set:function(e,n){return t[e]=n,n},add:function(e,n){return t[e]+=n,t[e]}}}angular.module("avriosApp").factory("stateService",[e]),e.$inject=["DEFAULT_LEVEL"]}(),function(){function e(e,t){return e.set("level",t),{bump:function(){let t=e.get("level");return e.set("level",++t)},get:function(){return e.get("level")}}}angular.module("avriosApp").factory("gameLevelService",e),e.$inject=["stateService","DEFAULT_LEVEL"]}(),function(){function e(){const e={state:{},get:function(t){return t?e.state[t]:e.state},set:function(t,n){return e.state[t]=n,n}};return e}angular.module("avriosApp").factory("gameStateService",e),e.$inject=[]}(),function(){function e(e,t,n){function r(){n.get("words").shift()}function o(){t().then(e=>n.get("words").push(...e))}function a(e,t){let n=0;for(let r=0;r<e.length;r++){const o=e[r]===t;o&&n++}return n}const i={findLetter:function(e){const t=i.getCurrentWord(),r=n.get("selectedLetters"),o=t.random;for(let t=0;t<o.length;t++){const n=o[t],a=n.letter===e,i=!r.includes(n.index);if(a&&i)return n}},checkIfLetterAvailable:function(e){const t=n.get("answer"),r=a(i.getCurrentWord("word"),e),o=a(t,e);return r>0&&r>o},checkStatus:function(e,t){const n=i.getCurrentWord("word");return{setWordAsSolved:e.toLowerCase()===n,letterDeleted:e.length<t.length}},decreaseWordScore:function(){const e=i.getCurrentWord();return e.score>0&&e.score--,e.score},removeFromSelected:function(){const e=n.get("cursorPosition"),t=n.get("removeMethod"),r=n.get("selectedLetters"),o="backspace"===t?-1:0;r.splice(e+o,1)},setWordAsSolved:function(){const t=i.getCurrentWord("score"),a=n.get("words");e.add("score",t),n.set("newWord",!0),n.set("answer",""),n.get("selectedLetters").length=0,r(),a.length<2&&o()},updateStatus:function(e,t){const n=i.checkStatus(e,t);n.setWordAsSolved?i.setWordAsSolved():n.letterDeleted&&(i.removeFromSelected(),i.decreaseWordScore())},getCurrentWord:function(e){const t=n.get("words")[0];return e?t[e]:t}};return i}angular.module("avriosApp").factory("gameWordService",e),e.$inject=["stateService","gameDataService","gameStateService"]}(),function(){function e(e,t,n){function r(e){const t=e;return t.word=t.word.toLowerCase(),t}function o(e){const t=e;return t.array=t.word.split(""),t}function a(e){const t=e;return t.array=t.array.map((e,t)=>({letter:e,index:t})),t}function i(e){const t=e,n=t.word.length;return t.score=Math.floor(Math.pow(1.95,n/3)),t}function s(e){const t=e;return t.random=c(t.array,t.word),t}function c(e,t){let n=0;const r=Array.from(e);return r.sort(function(){const e=1===n?.3:.7,t=l(n?e:.5);return n=t,t}),d(r,t)?r:c(r,t)}function l(e=.5){let t=e-Math.random();return 0===t&&(t=l()),t>0?1:-1}function d(e,t){return t!==e.join("")}function u(e,t){const n=e.word.length,r=t.word.length;return n<r?-1:n>r?1:0}return function(){const c=n.get(),l=e.get(`${t}&minLength=${c}&maxLength=${c}&limit=2`);return n.bump(),l.then(e=>e.data).then(e=>{if(e.length)return e;throw new Error("You guessed all words!")}).then(e=>[].concat(...e)).then(e=>e.map(i)).then(e=>e.sort(u)).then(e=>e.map(r)).then(e=>e.map(o)).then(e=>e.map(a)).then(e=>e.map(s)).catch(e=>{throw console.error(e),e})}}angular.module("avriosApp").factory("gameDataService",e),e.$inject=["$http","API_PATH","gameLevelService"]}(),function(){function e(e,t,n,r,o,a){function i(e){const t=o.get("answer");o.set("answer",t+e.toLowerCase())}const s=this;n.set("score",0),o.set("answer",""),o.set("words",a),o.set("newWord",!0),o.set("selectedLetters",[]),o.set("addLetterToAnswer",i),s.globalState=n.get,s.localState=o.get(),s.getWord=r.getCurrentWord,s.markAsUsed=function(e){"number"==typeof e&&o.get("selectedLetters").push(e)},s.findLetterByKeyCode=function(e){const t=String.fromCharCode(e).toLowerCase();return r.findLetter(t)},s.letterInUse=function(e){return o.get("selectedLetters").includes(e)},s.addLetterToAnswer=i,s.deleteLastLetter=function(){const e=o.get("answer"),t=e.slice(0,-1);o.set("cursorPosition",t.length),o.set("answer",e.slice(0,-1))},s.isLetterValid=function(e,t){const n=r.getCurrentWord("word"),a=o.get("selectedLetters").indexOf(e);if(a>=0)for(let e=0;e<n.length;e++){const r=n[e];if(r===t&&a===e)return!0}return!1},e.$watch(()=>o.get("answer"),function(e,t){o.get("newWord")?o.set("newWord",!1):r.updateStatus(e,t)}),e.$on("avrios.time.end",function(){console.log("this is the end...")}),n.get("nickname")||t.path("/mission")}angular.module("avriosApp").controller("gameCtrl",e),e.$inject=["$scope","$location","stateService","gameWordService","gameStateService","gameData"]}(),function(){function e(){return{getMissionDescription:function(){const e=[];return e[0]="M wrote:",e[1]="Mr Bond, as an Agent on Her Majestyâ€™s Secret Service you need to find out passwords used by Le Chiffre to access his secret accounts in Montenegro.",e[3]="Do not rush as always Bond because only for entering a word correctly you will be rewarded a full score. Each time you delete a letter -1 point will be taken from the score for a password. Good news is your score will never be lower than 0.",e[4]="And Remember Bond, you have only 40 seconds to find as many password as possible.",e[5]="Good luck!",e}}}angular.module("avriosApp").factory("missionService",e),e.$inject=[]}(),function(){function e(e,t){const n=this;t.set("nickname",""),t.set("score",0),n.description=e.getMissionDescription(),n.globalState=t.get()}angular.module("avriosApp").controller("missionCtrl",e),e.$inject=["missionService","stateService"]}(),function(){function e(e,t){function n(){null!==i.endTime||(i.endTime=Date.now()+t);const e=i.endTime-Date.now();e<=0?r():o(e)}function r(){i.time="0.00",clearInterval(i.timerInterval),i.timerInterval=null,e.$emit("avrios.time.end"),e.$digest()}function o(t){i.time=a(t),requestAnimationFrame(()=>{e.$digest()})}function a(e){return(e/1e3).toFixed(2)}const i=this;i.time=a(t),i.endTime=null,i.start=(()=>{i.timerInterval=setInterval(n,32)}),e.$on("$destroy",()=>{clearInterval(i.timerInterval)})}angular.module("avriosApp").controller("timerCtrl",e),e.$inject=["$scope","GAME_TIME"]}(),function(){angular.module("avriosApp").directive("avriosTimer",function(){return{restrict:"A",controller:"timerCtrl as timer",scope:!0,link:{post:function(e){e.timer.start()}}}})}(),function(){function e(e,t){return{restrict:"A",link:function(n,r){function o(e){!!e.originalEvent.clipboardData&&e.preventDefault()}function a(e){const n=String.fromCharCode(e.which).toLowerCase();t.checkIfLetterAvailable(n)||e.preventDefault()}function i({which:t}){const n=8===t;46===t?e.set("removeMethod","delete"):n&&e.set("removeMethod","backspace")}function s(){e.set("cursorPosition",r[0].selectionStart)}function c(t){const r=window.innerWidth<640,o=!!t;e.set("isMobile",r),o&&n.$parent.$apply()}r.on("paste input propertychange",o),r.on("keydown",s),r.on("keydown",i),r.on("keypress",a),window.addEventListener("resize",c),c(!1),r.focus(),n.$on("$destroy",function(){r.off("paste input propertychange",o),r.off("keydown",s),r.off("keydown",i),r.off("keydown",a),window.removeEventListener("resize",c)})}}}angular.module("avriosApp").directive("avriosGameInput",e),e.$inject=["gameStateService","gameWordService"]}(),function(){function e(e){return function(n){for(const r in n)if("default"!==r){const o=t(n[r]);e.when(r,o)}e.otherwise({redirectTo:n.default})}}function t(e){const t={},n=e.module;return t.controller=`${n}Ctrl`,t.controllerAs=n,t.templateUrl=`components/${n}/${n}.view.html`,t.resolve=e.resolve,t}angular.module("avriosApp").provider("simpleRoute",["$routeProvider",function(t){this.$get=[],this.init=e(t)}])}(),function(){function e(e){function t(e){return e()}const n={default:"/mission","/game":{module:"game",resolve:{gameData:t}},"/mission":{module:"mission"}};e.init(n),t.$inject=["gameDataService"]}angular.module("avriosApp").config(e),e.$inject=["simpleRouteProvider"]}(),angular.module("avriosApp").run(["$templateCache",function(e){e.put("components/game/game.view.html",'<header class="bs-docs-nav navbar"> <div class="container"> <div class="avrios-layout__flex avrios-layout__flex--h-space-between"> <div class="avrios-game__score"> <div class="avrios-game__text--active"> Time: </div> <div class="avrios-game__text--large"> <div class="avrios-timer" avrios-timer>{{timer.time}}</div> </div> </div> <div class="avrios-game__score hidden-xs"> <div class="avrios-game__text--active"> Name: </div> <div class="avrios-game__text--large"> {{::game.globalState(\'nickname\')}} </div> </div> <div class="avrios-game__score"> <div class="avrios-game__text--active"> Score: </div> <div class="avrios-game__text--large"> {{game.globalState(\'score\')}} </div> </div> </div> <div class="hidden-sm-up visible-xs"> <div class="avrios-game__score"> <div class="avrios-game__text--active"> Name: </div> <div class="avrios-game__text--large"> {{::game.globalState(\'nickname\')}} </div> </div> </div> </div> </header> <div class="container"> <div class="avrios-layout__flex avrios-layout__flex--h-center"> <div> <div class="avrios-game__block"> <div>Your letters:</div> <div class="avrios-game__words-container avrios-layout__flex avrios-layout__flex--wrap"> <div class="avrios-game__words-letter" ng-class="{\n                            \'avrios-game__words-letter--valid\': game.isLetterValid(letterObj.index, letterObj.letter),\n                            \'avrios-game__words-letter--invalid\': game.letterInUse(letterObj.index) && !game.isLetterValid(letterObj.index, letterObj.letter)\n                            }" ng-repeat="letterObj in game.getWord(\'random\') track by $index" ng-click="!game.letterInUse(letterObj.index) && game.addLetterToAnswer(letterObj.letter) || game.markAsUsed(letterObj.index)"> {{letterObj.letter}} </div> </div> </div> <div class="avrios-game__block"> <div class="form-group"> <label for="answer">Enter your answer:</label> <div class="input-group"> <span class="form-control avrios__input" ng-show="game.localState.isMobile"> {{game.localState.answer}} </span> <input class="form-control avrios__input" ng-show="!game.localState.isMobile" id="answer" name="answer" avrios-game-input ng-model="game.localState.answer" ng-keydown="game.markAsUsed(game.findLetterByKeyCode($event.which).index)"> <div class="input-group-addon avrios__input-addon" ng-click="game.deleteLastLetter()"> <span class="glyphicon glyphicon-erase"></span> </div> </div> </div> </div> <div class="avrios-game__block"> Word Score: <span class="avrios-game__text--active">{{game.getWord(\'score\')}}</span> </div> </div> </div> </div>'),e.put("components/mission/mission.view.html",'<div class="container"> <p ng-repeat="paragraph in mission.description"> {{paragraph}} </p> <div class="form-group"> <label for="nickname">To start enter your nickname:</label> <input class="form-control avrios__input" id="nickname" name="nickname" ng-model="mission.globalState.nickname"> </div> <a type="button" class="btn btn-default avrios__button" href="#!/game" ng-disabled="!mission.globalState.nickname">Start!</a> </div>')}]);